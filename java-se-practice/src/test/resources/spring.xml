<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
        <!--注解驱动-->
        <context:annotation-config />
        <!--当bean过多时 为了方便管理 就用注解来管理bean @Service @Repository @Component  @Controller
        此时 需要配置 包扫描 -->
        <context:component-scan base-package="practice"/>

        <bean id="helloSpringIOCService" autowire="byType" class= "com.flycat.common_practice.springIOC.HelloSpringIOCService">
                <!--注入方式 一 setter-->
                <!--注入方式 二 constructor-->
        </bean>
        <!--当一个类型的bean有多个时 采用 标识来说明 哪些bean不需要注入-->
        <!--<bean id="helloSpringa" autowire-candidate="false" class= "com.flycat.common_practice.springIOC.HelloSpring"></bean>-->
        <!--bean 实例化 方法一 构造器创建-->
        <bean id="helloSpringb" scope="singleton" class= "com.flycat.common_practice.springIOC.HelloSpring"></bean>
        <!--bean 实例化 方法二 静态工厂创建-->
        <!--<bean id="adf" class="com.flycat.common_practice.springIOC.HelloSpringFactory" factory-method="createHelloSpring"></bean>-->
        <!--bean 实例化 方法三 工厂示例创建 先创建工厂示例 在调用工程示例 建立对象-->
        <!--<bean id="factory" class="com.flycat.common_practice.springIOC.HelloSpringFactory"/>-->
        <!--<bean id="adfa" factory-bean="factory" factory-method="createHelloSpringInstance"/>-->

        <!--注入方式 三 注解注入 不需要手动写 setter方法-->
        <bean id="helloSpringAnnotation"  lazy-init="true" class= "com.flycat.common_practice.springIOC.HelloSpringAnnotation"></bean>

        <!--bean 的作用域 singleton 单例 整个bean只实例化一次   prototype  每次都创建新的对象
        三 request 一次http请求 四 session 一个浏览器会话  -->
        <!-- 一 @Scope("singleton")  二 scope= ""  -->
        <!--<bean id="helloSpringb" scope="singleton" class= "com.flycat.common_practice.springIOC.HelloSpring"></bean>-->

        <!--Bean的延长加载  -->
        <!--<bean id="helloSpringAnnotation"  lazy-init="true" class= "com.flycat.common_practice.springIOC.HelloSpringAnnotation"></bean>-->

</beans>